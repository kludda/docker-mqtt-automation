version: "3"

volumes:
   nodered:
   influxdbv2:
   grafana:
   telegraf:
   mosquitto_config:
   mosquitto_data:
   mosquitto_log:

networks:
   mqtt_automation:

services:
   mosquitto:
      container_name: mosquitto
      build: ./mosquitto
      networks:
         - mqtt_automation
      ports:
         - "1883:1883"
      volumes:
         - mosquitto_data:/mosquitto/data 
         - mosquitto_config:/mosquitto/config
         - mosquitto_log:/mosquitto/log
      restart: on-failure

   nodered:
      container_name: nodered
      build: ./nodered
      depends_on:
         - mosquitto
      environment:
         - TZ=Europe/Stockholm
         - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
         - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
         - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
         - DOCKER_INFLUXDB_HOST=${DOCKER_INFLUXDB_HOST}
         - DOCKER_INFLUXDB_PORT=${DOCKER_INFLUXDB_PORT}
         - DOCKER_MOSQUITTO_HOST=${DOCKER_MOSQUITTO_HOST}
         - DOCKER_MOSQUITTO_PORT=${DOCKER_MOSQUITTO_PORT}

      networks:
         - mqtt_automation
      ports:
         - "1880:1880"
      volumes:
         - nodered:/data 
      restart: on-failure
   influxdb:
      image: influxdb
      container_name: influxdb
      networks:
         - mqtt_automation
      ports:
         - "8086:8086"
      volumes:
         - influxdbv2:/var/lib/influxdb2:rw
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:8086" ]
#      interval: 30s
#      timeout: 10s
#      retries: 5
      environment:
         - DOCKER_INFLUXDB_INIT_MODE=${DOCKER_INFLUXDB_INIT_MODE}
         - DOCKER_INFLUXDB_INIT_USERNAME=${DOCKER_INFLUXDB_INIT_USERNAME}
         - DOCKER_INFLUXDB_INIT_PASSWORD=${DOCKER_INFLUXDB_INIT_PASSWORD}
         - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
         - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
         - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      restart: on-failure

   telegraf:
      container_name: telegraf
      build: ./telegraf
      depends_on:
         - influxdb
         - mosquitto
      networks:
         - mqtt_automation
      volumes:
         - telegraf:/etc/telegraf:ro
      environment:
         - DOCKER_INFLUXDB_INIT_ORG=${DOCKER_INFLUXDB_INIT_ORG}
         - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
         - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
         - DOCKER_INFLUXDB_HOST=${DOCKER_INFLUXDB_HOST}
         - DOCKER_INFLUXDB_PORT=${DOCKER_INFLUXDB_PORT}
         - DOCKER_MOSQUITTO_HOST=${DOCKER_MOSQUITTO_HOST}
         - DOCKER_MOSQUITTO_PORT=${DOCKER_MOSQUITTO_PORT}
      restart: on-failure

   grafana:
      container_name: grafana
      build: ./grafana
      depends_on:
         - influxdb
      networks:
         - mqtt_automation
      ports:
         - "3000:3000"
      environment:
         - DOCKER_INFLUXDB_HOST=${DOCKER_INFLUXDB_HOST}
         - DOCKER_INFLUXDB_PORT=${DOCKER_INFLUXDB_PORT}
         - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${DOCKER_INFLUXDB_INIT_ADMIN_TOKEN}
         - DOCKER_INFLUXDB_INIT_BUCKET=${DOCKER_INFLUXDB_INIT_BUCKET}
      volumes:
         - grafana:/var/lib/grafana
      restart: on-failure
